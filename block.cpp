#include "block.h"

Block::Block(int _r_axis, int _c_axis, int _type) {
	r_axis = _r_axis;
	c_axis = _c_axis;
	type = _type;
	model = 0;	// default model
	if (!(type >= 1 && type <= 7)) {
		std::cerr << "Invalid block type.\n";
		exit(1);
	}
}
char Block::ch_color[8][16] = {   "\x1B[0m"
								, "\x1B[31m"
								, "\x1B[32m"
								, "\x1B[33m"
								, "\x1B[34m"
								, "\x1B[35m"
								, "\x1B[36m"
								, "\x1B[37m"};
/* Tetorminoes' 4 coordinates := 7 tetrominoes (I, J, L, O, S, T, Z); 
								 each has up to 4 model;
								 each has exactly 4 cells;
								 row & column (in total, 2) axis
*/
int Block::Tetrominoes[8][4][4][2] = 
{	// 8 instances
	{},	// null for alignment
	{	// 4 instances
		// I
		{	// 4 instances
			{2, 0}, {2, 1}, {2, 2}, {2, 3}
		},
		{
			{0, 2}, {1, 2}, {2, 2}, {3, 2}
		},
		{
			{2, 0}, {2, 1}, {2, 2}, {2, 3}
		},
		{
			{0, 2}, {1, 2}, {2, 2}, {3, 2}
		}
	},
	{
		// J
		{
			{1, 0}, {1, 1}, {1, 2}, {2, 2}
		},
		{
			{0, 1}, {1, 1}, {2, 0}, {2, 1}
		},
		{
			{0, 0}, {1, 0}, {1, 1}, {1, 2}
		},
		{
			{0, 1}, {0, 2}, {1, 1}, {2, 1}
		}
	},
	{
		// L
		{
			{1, 0}, {1, 1}, {1, 2}, {2, 0}
		},
		{
			{0, 0}, {0, 1}, {1, 1}, {2, 1}
		},
		{
			{0, 2}, {1, 0}, {1, 1}, {1, 2}
		},
		{
			{0, 1}, {1, 1}, {2, 1}, {2, 2}
		}
	},
	{	
		// O (cannot rotate)
		{
			{0, 0}, {0, 1}, {1, 0}, {1, 1}
		},
		{
			{0, 0}, {0, 1}, {1, 0}, {1, 1}
		},
		{
			{0, 0}, {0, 1}, {1, 0}, {1, 1}
		},
		{
			{0, 0}, {0, 1}, {1, 0}, {1, 1}
		}
	},
	{	
		// S
		{
			{1, 1}, {1, 2}, {2, 0}, {2, 1}
		},
		{
			{0, 1}, {1, 1}, {1, 2}, {2, 2}
		},
		{
			{1, 1}, {1, 2}, {2, 0}, {2, 1}
		},
		{
			{0, 1}, {1, 1}, {1, 2}, {2, 2}
		},
	},
	{
		// T
		{
			{1, 0}, {1, 1}, {1, 2}, {2, 1}
		},
		{
			{0, 1}, {1, 0}, {1, 1}, {2, 1}
		},
		{
			{0, 1}, {1, 0}, {1, 1}, {1, 2}
		},
		{
			{0, 1}, {1, 1}, {1, 2}, {2, 1}
		}
	},
	{
		// Z
		{
			{1, 0}, {1, 1}, {2, 1}, {2, 2}
		},
		{
			{0, 2}, {1, 1}, {1, 2}, {2, 1}
		},
		{
			{1, 0}, {1, 1}, {2, 1}, {2, 2}
		},
		{
			{0, 2}, {1, 1}, {1, 2}, {2, 1}
		},
	}
};
/* hitbox's 4 coordinates := 7 tetrominoes (I, J, L, O, S, T, Z); 
							 each has up to 4 model;
							 each has up to 4 hitbox cells;
							 row & column (in total, 2) axis
*/
int Block::Drop_hitbox_count[8][4] =
{
	{},	// null for alignment
	// I
	{4, 1, 4, 1},
	// J
	{3, 2, 3, 2},
	// L
	{3, 2, 3, 2},
	// O
	{2, 2, 2, 2},
	// S
	{3, 2, 3 ,2},
	// T
	{3, 2, 3, 2},
	// Z
	{3, 2, 3, 2}
};
int Block::Drop_hitbox[8][4][4][2] =
{	// 8 instances
	{},	// null for alignment
	{	// 4 instances
		// I
		{
			{3, 0}, {3, 1}, {3, 2}, {3, 3}
		},
		{
			{4, 2}
		},
		{
			{3, 0}, {3, 1}, {3, 2}, {3, 3}
		},
		{
			{4, 2}
		}
	},
	{
		// J
		{
			{2, 0}, {2, 1}, {3, 2}
		},
		{
			{3, 0}, {3, 1}
		},
		{
			{2, 0}, {2, 1}, {2, 2}
		},
		{
			{1, 2}, {3, 1}
		}
	},
	{
		// L
		{
			{2, 1}, {2, 2}, {3, 0}
		},
		{
			{1, 0}, {3, 1}
		},
		{
			{2, 0}, {2, 1}, {2, 2}
		},
		{
			{3, 1}, {3, 2}
		}
	},
	{	
		// O (cannot rotate)
		{
			{2, 0}, {2, 1}
		},
		{
			{2, 0}, {2, 1}
		},
		{
			{2, 0}, {2, 1}
		},
		{
			{2, 0}, {2, 1}
		}
	},
	{	
		// S
		{
			{2, 2}, {3, 0}, {3, 1}
		},
		{
			{2, 1}, {3, 2}
		},
		{
			{2, 2}, {3, 0}, {3, 1}
		},
		{
			{2, 1}, {3, 2}
		},
	},
	{
		// T
		{
			{2, 0}, {2, 2}, {3, 1}
		},
		{
			{2, 0}, {3, 1}
		},
		{
			{2, 0}, {2, 1}, {2, 2}
		},
		{
			{2, 2}, {3, 1}
		}
	},
	{
		// Z
		{
			{2, 0}, {3, 1}, {3, 2}
		},
		{
			{2, 2}, {3, 1}
		},
		{
			{2, 0}, {3, 1}, {3, 2}
		},
		{
			{2, 2}, {3, 1}
		},
	}
};
int Block::Left_hitbox_count[8][4] = 
{
	{},	// null for alignment
	// I
	{1, 4, 1, 4},
	// J
	{2, 3, 2, 3},
	// L
	{2, 3, 2, 3},
	// O
	{2, 2, 2, 2},
	// S
	{2, 3, 2 ,3},
	// T
	{2, 3, 2, 3},
	// Z
	{2, 3, 2, 3}
};
int Block::Left_hitbox[8][4][4][2] = 
{	// 8 instances
	{},	// null for alignment
	{	// 4 instances
		// I
		{
			{2, -1}
		},
		{
			{0, 1}, {1, 1}, {2, 1}, {3, 1}
		},
		{
			{2, -1}
		},
		{
			{0, 1}, {1, 1}, {2, 1}, {3, 1}
		}
	},
	{
		// J
		{
			{1, -1}, {2, 1}
		},
		{
			{0, 0}, {1, 0}, {2, -1}
		},
		{
			{0, -1}, {1, -1}
		},
		{
			{0, 0}, {1, 0}, {2, 0}
		}
	},
	{
		// L
		{
			{1, -1}, {2, -1}
		},
		{
			{0, -1}, {1, 0}, {2, 0}
		},
		{
			{0, 1}, {1, -1}
		},
		{
			{0, 0}, {1, 0}, {2, 0}
		}
	},
	{	
		// O (cannot rotate)
		{
			{0, -1}, {1, -1}
		},
		{
			{0, -1}, {1, -1}
		},
		{
			{0, -1}, {1, -1}
		},
		{
			{0, -1}, {1, -1}
		}
	},
	{	
		// S
		{
			{1, 0}, {2, -1}
		},
		{
			{0, 0}, {1, 0}, {2, 1}
		},
		{
			{1, 0}, {2, -1}
		},
		{
			{0, 0}, {1, 0}, {2, 1}
		},
	},
	{
		// T
		{
			{1, -1}, {2, 0}
		},
		{
			{0, 0}, {1, -1}, {2, 0}
		},
		{
			{0, 0}, {1, -1}
		},
		{
			{0, 0}, {1, 0}, {2, 0}
		}
	},
	{
		// Z
		{
			{1, -1}, {2, 0}
		},
		{
			{0, 1}, {1, 0}, {2, 0}
		},
		{
			{1, -1}, {2, 0}
		},
		{
			{0, 1}, {1, 0}, {2, 0}
		},
	}
};
int Block::Right_hitbox_count[8][4] = 
{
	{},	// null for alignment
	// I
	{1, 4, 1, 4},
	// J
	{2, 3, 2, 3},
	// L
	{2, 3, 2, 3},
	// O
	{2, 2, 2, 2},
	// S
	{2, 3, 2 ,3},
	// T
	{2, 3, 2, 3},
	// Z
	{2, 3, 2, 3}
};
int Block::Right_hitbox[8][4][4][2] =
{	// 8 instances
	{},	// null for alignment
	{	// 4 instances
		// I
		{
			{2, 4}
		},
		{
			{0, 3}, {1, 3}, {2, 3}, {3, 3}
		},
		{
			{2, 4}
		},
		{
			{0, 3}, {1, 3}, {2, 3}, {3, 3}
		}
	},
	{
		// J
		{
			{1, 3}, {2, 3}
		},
		{
			{0, 2}, {1, 2}, {2, 2}
		},
		{
			{0, 1}, {1, 3}
		},
		{
			{0, 3}, {1, 2}, {2, 2}
		}
	},
	{
		// L
		{
			{1, 3}, {2, 1}
		},
		{
			{0, 2}, {1, 2}, {2, 2}
		},
		{
			{0, 3}, {1, 3}
		},
		{
			{0, 2}, {1, 2}, {2, 3}
		}
	},
	{	
		// O (cannot rotate)
		{
			{0, 2}, {1, 2}
		},
		{
			{0, 2}, {1, 2}
		},
		{
			{0, 2}, {1, 2}
		},
		{
			{0, 2}, {1, 2}
		}
	},
	{	
		// S
		{
			{1, 3}, {2, 2}
		},
		{
			{0, 2}, {1, 3}, {2, 3}
		},
		{
			{1, 3}, {2, 2}
		},
		{
			{0, 2}, {1, 3}, {2, 3}
		},
	},
	{
		// T
		{
			{1, 3}, {2, 2}
		},
		{
			{0, 2}, {1, 2}, {2, 2}
		},
		{
			{0, 2}, {1, 3}
		},
		{
			{0, 2}, {1, 3}, {2, 2}
		}
	},
	{
		// Z
		{
			{1, 2}, {2, 3}
		},
		{
			{0, 3}, {1, 3}, {2, 2}
		},
		{
			{1, 2}, {2, 3}
		},
		{
			{0, 3}, {1, 3}, {2, 2}
		},
	}
};
